# This is a basic workflow to help you get started with Actions

name: CICD for Cloudhub 2.0

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on, LINUX UBUNTU
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Caches dependencies and build outputs to improve workflow execution time.
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          
      - uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: |
            [{
                "id": "anypoint-exchange-v3",
                "username": "${{ secrets.ANYPOINT_USERNAME }}",
                "password": "${{ secrets.ANYPOINT_PASSWORD }}"
            },
            {
                "id": "cloudhub-deploy",
                "username": "${{ secrets.ANYPOINT_USERNAME }}",
                "password": "${{ secrets.ANYPOINT_PASSWORD }}"
            },
            {
              "id": "anypoint-exchange-v3-student-deployment",
              "username": "${{ secrets.ANYPOINT_USERNAME }}",
              "password": "${{ secrets.ANYPOINT_PASSWORD }}"
            }
            ]
          
      # maven build command, could add other flags if needed
      - name: Build
        run: mvn -B clean package
        
        # save the produced jar file to be deployed later    
      - uses: actions/upload-artifact@v3
        with:
            name: muleapp
            path: target/*.jar

 # Step to upload the artifact to Exchange
  exchange:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: s4u/maven-settings-action@v2.6.0
      with:
        servers: |
          [{
              "id": "anypoint-exchange-v3",
              "username": "${{ secrets.ANYPOINT_USERNAME }}",
              "password": "${{ secrets.ANYPOINT_PASSWORD }}"
          },
          {
              "id": "anypoint-exchange-v3-student-deployment",
              "username": "${{ secrets.ANYPOINT_USERNAME }}",
              "password": "${{ secrets.ANYPOINT_PASSWORD }}"
          }]
    - name: Publish artifact to Exchange
      run: |
        mvn -B clean deploy
        
# Steps for executing the deployment against Cloudhub2.0 Anypoint Platform
  deploy:
    needs: exchange
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - uses: s4u/maven-settings-action@v2.6.0
      with:
        servers: |
          [{
              "id": "anypoint-exchange-v3",
              "username": "${{ secrets.ANYPOINT_USERNAME }}",
              "password": "${{ secrets.ANYPOINT_PASSWORD }}"
          },
          {
                "id": "cloudhub-deploy",
                "username": "${{ secrets.ANYPOINT_USERNAME }}",
                "password": "${{ secrets.ANYPOINT_PASSWORD }}"
          }]
          
         
    - uses: actions/download-artifact@v3
      with:
        name: muleapp
        
    - name: Deploy to CloudHub 2
      env:
        AUTHOR: "Juan Manuel"
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn clean deploy -DmuleDeploy -Dmule.artifact=muleapp.jar -Dcicd.welcome.message="Hola Mundo v2" -Denvironment="sandbox
